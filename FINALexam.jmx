<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Cinematica ">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.3.1.23. Please contact support@blazemeter.com for further support.</stringProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="sec-ch-ua" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua</stringProp>
            <stringProp name="Header.value">&quot;Not.A/Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;114&quot;, &quot;Google Chrome&quot;;v=&quot;114&quot;</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-mobile" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-platform" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
            <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36</stringProp>
          </elementProp>
          <elementProp name="Sec-Fetch-Site" elementType="Header">
            <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
            <stringProp name="Header.value">same-origin</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">lalafo.kg</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group">
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController">
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Test">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/bishkek/ads/vozmu-v-arendu-avto-id-88497326">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">bishkek/ads/vozmu-v-arendu-avto-id-88497326</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/catalog/v3/categories/parents?category_id=1572&amp;with_current=true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="with_current" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">with_current</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="category_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">category_id</stringProp>
                  <stringProp name="Argument.value">1572</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/catalog/v3/categories/parents</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_4a3d7e71-10dc-49b4-a952-8c8221614a58</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/catalog/v2/fast-messages">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/catalog/v2/fast-messages</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_59a28646-9ada-4817-96a2-7045b1658b49</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/search/v3/feed/details/88497326?expand=url">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="expand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">expand</stringProp>
                  <stringProp name="Argument.value">url</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/search/v3/feed/details/88497326</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_6c89e3a5-9608-4ed9-a977-b0f0cb48388e</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/seo/v3/metas/details?ad_id=88497326&amp;category_id=1572&amp;city_id=103184">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ad_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ad_id</stringProp>
                  <stringProp name="Argument.value">88497326</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="category_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">category_id</stringProp>
                  <stringProp name="Argument.value">1572</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">103184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/seo/v3/metas/details</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_f043db6b-8923-4cd4-a639-df673aeabba0</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/proxy/location/v3/cities/all?country_id=12">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="country_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">country_id</stringProp>
                  <stringProp name="Argument.value">12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/proxy/location/v3/cities/all</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_809e6f2e-670f-46c1-b0eb-e9da4bb69da6</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/proxy/catalog/v3/categories/tree">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/proxy/catalog/v3/categories/tree</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_17428aac-b8ca-474c-ac7a-a67344bc8df7</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/proxy/catalog/categories/fullname">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/proxy/catalog/categories/fullname</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_6f11eeeb-aaa7-4dc4-ac21-a31ff31c120f</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/business-profile/v3/business-profile/features/user/13790297">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/business-profile/v3/business-profile/features/user/13790297</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_f6a630b3-418d-440b-b446-a4ffc55c4316</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/experiment/v3/experiments?">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.value">{&quot;include_server_only&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/experiment/v3/experiments?</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_6b6748c7-ae85-4a65-b53c-3266879bfc56</stringProp>
                </elementProp>
                <elementProp name="device-fingerprint" elementType="Header">
                  <stringProp name="Header.name">device-fingerprint</stringProp>
                  <stringProp name="Header.value">7f8fd1fde51720b525799645bf534721</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/chat-socket/v3/users/get-user-status?userIds[]=13790297">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="userIds[]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userIds[]</stringProp>
                  <stringProp name="Argument.value">13790297</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/chat-socket/v3/users/get-user-status</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_cc2b080a-44a7-4985-b4a3-eef219409c67</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/catalog/v3/params/filter?">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/catalog/v3/params/filter</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_540c6f30-8bae-4af2-8380-5458421d667b</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/business-profile/v3/business-profile/profiles/?requirements=base_filled&amp;currentPage=1&amp;per-page=20&amp;model=base">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="per-page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">per-page</stringProp>
                  <stringProp name="Argument.value">20</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="requirements" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">requirements</stringProp>
                  <stringProp name="Argument.value">base_filled</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="model" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">model</stringProp>
                  <stringProp name="Argument.value">base</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/business-profile/v3/business-profile/profiles/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_1b323087-4f58-49ac-bf47-3fac6e418bc3</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/search/v3/feed?expand=url&amp;vip_count=5&amp;per-page=50">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="per-page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">per-page</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="expand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">expand</stringProp>
                  <stringProp name="Argument.value">url</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="vip_count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vip_count</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/search/v3/feed</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_03abd113-77e4-4f8d-8ee9-380ee16cc7e0</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/proxy/seo/v3/metas/home">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/proxy/seo/v3/metas/home</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_fee75625-030c-42ac-8c27-add1420b8bc8</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/search/v3/suggestions/complete?q=fd">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">fd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/search/v3/suggestions/complete</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_80545ffc-4d92-46fe-8f16-215e56be767a</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/search/v3/suggestions/complete?q=%D0%B0%D0%B2%D1%82%D0%BE%D0%BC%D0%BE%D0%B1%D0%B8%D0%BB">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">автомобил</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/search/v3/suggestions/complete</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_d8d23374-2ef1-46b8-bbf4-9db551547ef4</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/search/v3/feed?expand=url&amp;per-page=50&amp;vip_count=5&amp;m-name=last_push_up&amp;m-next-value=1690198633294&amp;sub-empty=1&amp;page=2">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="per-page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">per-page</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="expand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">expand</stringProp>
                  <stringProp name="Argument.value">url</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="m-name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">m-name</stringProp>
                  <stringProp name="Argument.value">last_push_up</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sub-empty" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sub-empty</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="vip_count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vip_count</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="m-next-value" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">m-next-value</stringProp>
                  <stringProp name="Argument.value">1690198633294</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/search/v3/feed</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_433cd27c-a527-47ef-aff4-5c673d8aeccc</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/analytics/api/v3/event">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.value">[{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198707264,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:60975093,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:4332,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;29\&quot;:2756,\&quot;425\&quot;:27236,\&quot;742\&quot;:38796,\&quot;743\&quot;:22844}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198707265,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:42161656,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:2044,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;68\&quot;:30757,\&quot;69\&quot;:2773,\&quot;226\&quot;:18056,\&quot;357\&quot;:23228,\&quot;867\&quot;:29517,\&quot;870\&quot;:29535,\&quot;945\&quot;:30749,\&quot;948\&quot;:30760,\&quot;949\&quot;:30770,\&quot;950\&quot;:30777,\&quot;951\&quot;:30781,\&quot;952\&quot;:30784,\&quot;953\&quot;:30794}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198707266,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:87164895,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:1608,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;49\&quot;:12583,\&quot;62\&quot;:1428,\&quot;63\&quot;:4561,\&quot;64\&quot;:2780,\&quot;65\&quot;:29532,\&quot;66\&quot;:23551,\&quot;105\&quot;:23108,\&quot;106\&quot;:16499,\&quot;242\&quot;:18559,\&quot;244\&quot;:18565,\&quot;1155\&quot;:31939,\&quot;1156\&quot;:31945,\&quot;1157\&quot;:31947}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198707267,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:98956172,&quot;country_id&quot;:12,&quot;city_id&quot;:103822,&quot;category_id&quot;:1585,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;29\&quot;:2757,\&quot;49\&quot;:13978,\&quot;62\&quot;:4617,\&quot;63\&quot;:15481,\&quot;64\&quot;:31943,\&quot;65\&quot;:7071,\&quot;66\&quot;:23553,\&quot;105\&quot;:23108,\&quot;106\&quot;:16500,\&quot;242\&quot;:18559,\&quot;244\&quot;:18564,\&quot;1154\&quot;:30851,\&quot;1155\&quot;:31939,\&quot;1156\&quot;:31945,\&quot;1157\&quot;:31947}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198707268,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:91963608,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:6256,&quot;event_details&quot;:{&quot;event24h&quot;:true,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198707269,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:103920570,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:6220,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;29\&quot;:2756,\&quot;62\&quot;:4577,\&quot;233\&quot;:18239,\&quot;425\&quot;:27241,\&quot;1019\&quot;:31108}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198707270,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:87119734,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:2045,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;69\&quot;:2773,\&quot;357\&quot;:23235,\&quot;920\&quot;:30611,\&quot;927\&quot;:31193,\&quot;928\&quot;:30635,\&quot;929\&quot;:31191}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198707271,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:97019645,&quot;country_id&quot;:12,&quot;city_id&quot;:103752,&quot;category_id&quot;:4321,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;29\&quot;:2757,\&quot;105\&quot;:16482,\&quot;237\&quot;:18368,\&quot;425\&quot;:27236}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198707272,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:79867331,&quot;country_id&quot;:12,&quot;city_id&quot;:103220,&quot;category_id&quot;:5051,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;old_price&quot;:25000,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198707273,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:87897071,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:4551,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;29\&quot;:2757,\&quot;66\&quot;:23544,\&quot;105\&quot;:16482,\&quot;425\&quot;:27236}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198707273,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:96416715,&quot;country_id&quot;:12,&quot;city_id&quot;:103752,&quot;category_id&quot;:4281,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;29\&quot;:2757,\&quot;104\&quot;:16481,\&quot;105\&quot;:16489,\&quot;425\&quot;:27236}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198707274,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:57206448,&quot;country_id&quot;:12,&quot;city_id&quot;:103218,&quot;category_id&quot;:5670,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;29\&quot;:2756,\&quot;242\&quot;:18559,\&quot;425\&quot;:27236}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198707275,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:88497326,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:1572,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;49\&quot;:14346,\&quot;62\&quot;:16475}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198707276,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:96596147,&quot;country_id&quot;:12,&quot;city_id&quot;:103193,&quot;category_id&quot;:1621,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;29\&quot;:2757,\&quot;184\&quot;:16909,\&quot;185\&quot;:17112,\&quot;187\&quot;:17205,\&quot;188\&quot;:17314,\&quot;189\&quot;:17234}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198707277,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:105400650,&quot;country_id&quot;:12,&quot;city_id&quot;:103218,&quot;category_id&quot;:4294,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;29\&quot;:2756,\&quot;105\&quot;:16496}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198707277,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:97033409,&quot;country_id&quot;:12,&quot;city_id&quot;:103752,&quot;category_id&quot;:1468,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;29\&quot;:2756,\&quot;105\&quot;:16482,\&quot;425\&quot;:27236}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198707278,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:79551611,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:5167,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;583\&quot;:28334,\&quot;585\&quot;:28353,\&quot;595\&quot;:28433}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198707279,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:82438768,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:2045,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;69\&quot;:2773,\&quot;920\&quot;:30609,\&quot;927\&quot;:31193,\&quot;928\&quot;:30635,\&quot;929\&quot;:30638}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198707280,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:88890727,&quot;country_id&quot;:12,&quot;city_id&quot;:103736,&quot;category_id&quot;:2031,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;68\&quot;:29575,\&quot;69\&quot;:27381,\&quot;256\&quot;:29523,\&quot;870\&quot;:29539,\&quot;871\&quot;:29541,\&quot;872\&quot;:29542,\&quot;879\&quot;:29592,\&quot;881\&quot;:29599}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198707281,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:84218806,&quot;country_id&quot;:12,&quot;city_id&quot;:103729,&quot;category_id&quot;:1342,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;29\&quot;:2756,\&quot;105\&quot;:16496,\&quot;291\&quot;:21652,\&quot;292\&quot;:21657,\&quot;294\&quot;:21690,\&quot;295\&quot;:21699,\&quot;296\&quot;:21704,\&quot;297\&quot;:21710,\&quot;425\&quot;:27241}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198707282,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:86470713,&quot;country_id&quot;:12,&quot;city_id&quot;:103752,&quot;category_id&quot;:1474,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;29\&quot;:2756,\&quot;105\&quot;:16483,\&quot;425\&quot;:27236}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198707283,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:96088746,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:4559,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;29\&quot;:2757}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198707284,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:58507525,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:1332,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;29\&quot;:2756,\&quot;271\&quot;:20606,\&quot;425\&quot;:27236}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198707285,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:89326598,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:5004,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1},&quot;label&quot;:null}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/analytics/api/v3/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_186a580c-610b-42bc-a18d-b0ec44032752</stringProp>
                </elementProp>
                <elementProp name="device-fingerprint" elementType="Header">
                  <stringProp name="Header.name">device-fingerprint</stringProp>
                  <stringProp name="Header.value">7f8fd1fde51720b525799645bf534721</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/analytics/api/v3/event">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.value">[{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198707724,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:85035240,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:1581,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;29\&quot;:2756,\&quot;49\&quot;:14469,\&quot;62\&quot;:1431,\&quot;63\&quot;:4561,\&quot;64\&quot;:2780,\&quot;65\&quot;:29532,\&quot;66\&quot;:23568,\&quot;105\&quot;:16496,\&quot;106\&quot;:16500,\&quot;244\&quot;:18565,\&quot;1155\&quot;:31939}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198707725,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:85035238,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:6256,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198707725,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:93596673,&quot;country_id&quot;:12,&quot;city_id&quot;:103209,&quot;category_id&quot;:4377,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;29\&quot;:2756,\&quot;425\&quot;:27241}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198707726,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:95676607,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:5063,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;campaign_show&quot;:1,&quot;feed_id&quot;:1,&quot;is_ppv&quot;:1,&quot;params&quot;:&quot;{\&quot;464\&quot;:23113,\&quot;465\&quot;:27591,\&quot;489\&quot;:27743}&quot;},&quot;label&quot;:null}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/analytics/api/v3/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_0015c966-799e-4258-a5d9-2e32079d379c</stringProp>
                </elementProp>
                <elementProp name="device-fingerprint" elementType="Header">
                  <stringProp name="Header.name">device-fingerprint</stringProp>
                  <stringProp name="Header.value">7f8fd1fde51720b525799645bf534721</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/analytics/api/v3/event">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.value">[{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198712177,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:56768635,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:1474,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;29\&quot;:2756,\&quot;105\&quot;:31915}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198712178,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:97479059,&quot;country_id&quot;:12,&quot;city_id&quot;:103752,&quot;category_id&quot;:1473,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;29\&quot;:2756,\&quot;105\&quot;:27215,\&quot;425\&quot;:27236}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198712179,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:78817015,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:1481,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;old_price&quot;:250,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1},&quot;label&quot;:null}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/analytics/api/v3/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_3441ee09-56da-40aa-b095-5d300a076b1f</stringProp>
                </elementProp>
                <elementProp name="device-fingerprint" elementType="Header">
                  <stringProp name="Header.name">device-fingerprint</stringProp>
                  <stringProp name="Header.value">7f8fd1fde51720b525799645bf534721</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/analytics/api/v3/event">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.value">[{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198712191,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:37301400,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:4425,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;campaign_show&quot;:1,&quot;feed_id&quot;:1,&quot;is_ppv&quot;:1,&quot;params&quot;:&quot;{\&quot;29\&quot;:2757,\&quot;425\&quot;:27241}&quot;},&quot;label&quot;:null}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/analytics/api/v3/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_ebfbfa19-b11b-4dcb-bef7-9d6c5a02062e</stringProp>
                </elementProp>
                <elementProp name="device-fingerprint" elementType="Header">
                  <stringProp name="Header.name">device-fingerprint</stringProp>
                  <stringProp name="Header.value">7f8fd1fde51720b525799645bf534721</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/analytics/api/v3/event">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.value">[{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198717618,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:86847065,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:2046,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;campaign_show&quot;:1,&quot;feed_id&quot;:1,&quot;is_ppv&quot;:1,&quot;params&quot;:&quot;{\&quot;68\&quot;:29633,\&quot;69\&quot;:2774,\&quot;226\&quot;:18060,\&quot;256\&quot;:29524,\&quot;357\&quot;:30236,\&quot;867\&quot;:29518,\&quot;868\&quot;:29528,\&quot;871\&quot;:29537,\&quot;872\&quot;:29542,\&quot;873\&quot;:29547,\&quot;874\&quot;:23505,\&quot;875\&quot;:29557,\&quot;876\&quot;:29564,\&quot;877\&quot;:29568,\&quot;878\&quot;:29584}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198717619,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:95501359,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:1621,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;campaign_show&quot;:1,&quot;feed_id&quot;:1,&quot;is_ppv&quot;:1,&quot;params&quot;:&quot;{\&quot;29\&quot;:2756,\&quot;184\&quot;:16912,\&quot;187\&quot;:17207,\&quot;188\&quot;:17314,\&quot;189\&quot;:17233,\&quot;425\&quot;:27241}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198717621,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:87897068,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:5063,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;campaign_show&quot;:1,&quot;feed_id&quot;:1,&quot;is_ppv&quot;:1,&quot;params&quot;:&quot;{\&quot;464\&quot;:23113,\&quot;465\&quot;:27590,\&quot;489\&quot;:27743}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:home:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198717621,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:83062179,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:2046,&quot;event_details&quot;:{&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;campaign_show&quot;:1,&quot;feed_id&quot;:1,&quot;is_ppv&quot;:1,&quot;params&quot;:&quot;{\&quot;68\&quot;:29574,\&quot;69\&quot;:2775,\&quot;226\&quot;:18057,\&quot;256\&quot;:29524,\&quot;357\&quot;:23249,\&quot;867\&quot;:29518,\&quot;868\&quot;:29528,\&quot;871\&quot;:29541,\&quot;872\&quot;:29542,\&quot;873\&quot;:29547,\&quot;874\&quot;:23505,\&quot;875\&quot;:29558,\&quot;876\&quot;:29563,\&quot;877\&quot;:29567,\&quot;878\&quot;:29585}&quot;},&quot;label&quot;:null}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/analytics/api/v3/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_88a086ce-9e34-41e1-9933-aaca4bb979c5</stringProp>
                </elementProp>
                <elementProp name="device-fingerprint" elementType="Header">
                  <stringProp name="Header.name">device-fingerprint</stringProp>
                  <stringProp name="Header.value">7f8fd1fde51720b525799645bf534721</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/bishkek/ads/prodau-knizku-dla-detej-votsap-id-78796032">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">bishkek/ads/prodau-knizku-dla-detej-votsap-id-78796032</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer">
              <stringProp name="RandomTimer.range">30998.0</stringProp>
              <stringProp name="ConstantTimer.delay">15499</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 30998 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/catalog/v3/categories/parents?category_id=1481&amp;with_current=true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="with_current" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">with_current</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="category_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">category_id</stringProp>
                  <stringProp name="Argument.value">1481</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/catalog/v3/categories/parents</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_3bc9d827-e813-4eaf-bfbf-559f4915ccb7</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/catalog/v2/fast-messages">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/catalog/v2/fast-messages</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_10419dbe-0df4-4c0b-9bb1-c37e15cfd93f</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/search/v3/feed/details/78796032?expand=url">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="expand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">expand</stringProp>
                  <stringProp name="Argument.value">url</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/search/v3/feed/details/78796032</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_242cd5c4-59b7-4522-87b3-a9fe832cc1a3</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/seo/v3/metas/details?ad_id=78796032&amp;category_id=1481&amp;city_id=103184">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ad_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ad_id</stringProp>
                  <stringProp name="Argument.value">78796032</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="category_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">category_id</stringProp>
                  <stringProp name="Argument.value">1481</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">103184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/seo/v3/metas/details</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_94cb3880-a3ec-4090-ae28-bdfd239ecdf7</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/proxy/location/v3/cities/all?country_id=12">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="country_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">country_id</stringProp>
                  <stringProp name="Argument.value">12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/proxy/location/v3/cities/all</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_a1bb5ae6-575a-44c6-a9a7-4b7c7068a5a7</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/proxy/catalog/v3/categories/tree">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/proxy/catalog/v3/categories/tree</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_d9ad2016-312a-41a9-97d1-4886419b1839</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/proxy/catalog/categories/fullname">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/proxy/catalog/categories/fullname</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_29b7afa9-6063-4e48-9b17-3924fd50738b</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/business-profile/v3/business-profile/features/user/6578697">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/business-profile/v3/business-profile/features/user/6578697</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_cfa47a22-88cd-4dc0-883d-0281effbbdb7</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/experiment/v3/experiments?">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.value">{&quot;include_server_only&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/experiment/v3/experiments?</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_91447302-a4e6-4329-8c0e-6e7594bd208c</stringProp>
                </elementProp>
                <elementProp name="device-fingerprint" elementType="Header">
                  <stringProp name="Header.name">device-fingerprint</stringProp>
                  <stringProp name="Header.value">7f8fd1fde51720b525799645bf534721</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/chat-socket/v3/users/get-user-status?userIds[]=6578697">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="userIds[]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userIds[]</stringProp>
                  <stringProp name="Argument.value">6578697</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/chat-socket/v3/users/get-user-status</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_4d788ad3-359f-465f-a390-186c55a073ff</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/catalog/v3/params/filter?city_id=209">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">209</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/catalog/v3/params/filter</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_a928ba5b-f0ca-421c-bd93-460a95719768</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/catalog/v32/categories/not-empty-links/1?city_id=103184">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">103184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/catalog/v32/categories/not-empty-links/1</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_9b003d3f-a3dd-492a-91b6-6bc06cbff197</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/search/v3/feed/search?expand=url&amp;per-page=40&amp;city_id=103184">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="per-page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">per-page</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="expand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">expand</stringProp>
                  <stringProp name="Argument.value">url</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">103184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/search/v3/feed/search</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_c360620e-9e80-4e58-aa26-79c52e9fb50a</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/seo/v3/metas/listing?city_id=103184&amp;page=1&amp;ads_count=10000">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ads_count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ads_count</stringProp>
                  <stringProp name="Argument.value">10000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">103184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/seo/v3/metas/listing</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_4cce859e-6c45-451a-b531-8f2d62120faa</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/search/v3/feed/count?city_id=103184">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">103184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/search/v3/feed/count</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_fae3cda1-7f7a-499f-8988-34f4cc060b89</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/analytics/api/v3/event">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.value">[{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:listing:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198724623,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:85932316,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:4994,&quot;event_details&quot;:{&quot;total_count&quot;:&quot;null&quot;,&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;425\&quot;:27240}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:listing:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198724625,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:94946274,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:2046,&quot;event_details&quot;:{&quot;total_count&quot;:&quot;null&quot;,&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;68\&quot;:29633,\&quot;69\&quot;:2773,\&quot;226\&quot;:18057,\&quot;256\&quot;:29524,\&quot;357\&quot;:30378,\&quot;867\&quot;:29515,\&quot;868\&quot;:29528,\&quot;871\&quot;:29537,\&quot;872\&quot;:29542,\&quot;873\&quot;:29548,\&quot;874\&quot;:29552,\&quot;875\&quot;:29559,\&quot;876\&quot;:29563,\&quot;877\&quot;:29567,\&quot;878\&quot;:29584}&quot;},&quot;label&quot;:null}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/analytics/api/v3/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_ec96fb7e-01f9-4966-834b-f75e6d56af98</stringProp>
                </elementProp>
                <elementProp name="device-fingerprint" elementType="Header">
                  <stringProp name="Header.name">device-fingerprint</stringProp>
                  <stringProp name="Header.value">7f8fd1fde51720b525799645bf534721</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/search/v3/feed/search?city_id=103184&amp;expand=url&amp;m-name=last_push_up&amp;m-next-value=1690198677498&amp;sub-empty=1&amp;page=2">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="expand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">expand</stringProp>
                  <stringProp name="Argument.value">url</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="m-name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">m-name</stringProp>
                  <stringProp name="Argument.value">last_push_up</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sub-empty" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sub-empty</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="m-next-value" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">m-next-value</stringProp>
                  <stringProp name="Argument.value">1690198677498</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">103184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/search/v3/feed/search</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_14c02f5d-36f8-4060-8e97-42e3f9ba7b5a</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/analytics/api/v3/event">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.value">[{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:listing:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198725570,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:94439556,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:1605,&quot;event_details&quot;:{&quot;total_count&quot;:&quot;10000&quot;,&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;29\&quot;:2756,\&quot;49\&quot;:1028,\&quot;62\&quot;:6938,\&quot;63\&quot;:31538,\&quot;64\&quot;:31942,\&quot;65\&quot;:7070,\&quot;66\&quot;:23546,\&quot;105\&quot;:16496,\&quot;106\&quot;:16500,\&quot;244\&quot;:18565,\&quot;1155\&quot;:31940,\&quot;1156\&quot;:31945,\&quot;1157\&quot;:31947}&quot;},&quot;label&quot;:null}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/analytics/api/v3/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_c720c6f4-0378-450c-9440-b109f04e0715</stringProp>
                </elementProp>
                <elementProp name="device-fingerprint" elementType="Header">
                  <stringProp name="Header.name">device-fingerprint</stringProp>
                  <stringProp name="Header.value">7f8fd1fde51720b525799645bf534721</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/analytics/api/v3/event">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.value">[{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:listing:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198726036,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:105262491,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:1337,&quot;event_details&quot;:{&quot;total_count&quot;:&quot;10000&quot;,&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;29\&quot;:2756}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:listing:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198726038,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:83235795,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:1460,&quot;event_details&quot;:{&quot;total_count&quot;:&quot;10000&quot;,&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;29\&quot;:2756,\&quot;144\&quot;:16776,\&quot;145\&quot;:16778,\&quot;148\&quot;:16808,\&quot;425\&quot;:27236,\&quot;1653\&quot;:37197,\&quot;1656\&quot;:38291,\&quot;1672\&quot;:38402,\&quot;1673\&quot;:38405,\&quot;1674\&quot;:38411}&quot;},&quot;label&quot;:null}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/analytics/api/v3/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_32d30fc9-1b48-4336-92d9-2b98685124ff</stringProp>
                </elementProp>
                <elementProp name="device-fingerprint" elementType="Header">
                  <stringProp name="Header.name">device-fingerprint</stringProp>
                  <stringProp name="Header.value">7f8fd1fde51720b525799645bf534721</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/analytics/api/v3/event">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.value">[{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:listing:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198730204,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:42161656,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:2044,&quot;event_details&quot;:{&quot;total_count&quot;:&quot;10000&quot;,&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;68\&quot;:30757,\&quot;69\&quot;:2773,\&quot;226\&quot;:18056,\&quot;357\&quot;:23228,\&quot;867\&quot;:29517,\&quot;870\&quot;:29535,\&quot;945\&quot;:30749,\&quot;948\&quot;:30760,\&quot;949\&quot;:30770,\&quot;950\&quot;:30777,\&quot;951\&quot;:30781,\&quot;952\&quot;:30784,\&quot;953\&quot;:30794}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:listing:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198730206,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:87164895,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:1608,&quot;event_details&quot;:{&quot;total_count&quot;:&quot;10000&quot;,&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;49\&quot;:12583,\&quot;62\&quot;:1428,\&quot;63\&quot;:4561,\&quot;64\&quot;:2780,\&quot;65\&quot;:29532,\&quot;66\&quot;:23551,\&quot;105\&quot;:23108,\&quot;106\&quot;:16499,\&quot;242\&quot;:18559,\&quot;244\&quot;:18565,\&quot;1155\&quot;:31939,\&quot;1156\&quot;:31945,\&quot;1157\&quot;:31947}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:listing:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198730208,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:91963608,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:6256,&quot;event_details&quot;:{&quot;total_count&quot;:&quot;10000&quot;,&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:listing:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198730209,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:94439556,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:1605,&quot;event_details&quot;:{&quot;total_count&quot;:&quot;10000&quot;,&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;29\&quot;:2756,\&quot;49\&quot;:1028,\&quot;62\&quot;:6938,\&quot;63\&quot;:31538,\&quot;64\&quot;:31942,\&quot;65\&quot;:7070,\&quot;66\&quot;:23546,\&quot;105\&quot;:16496,\&quot;106\&quot;:16500,\&quot;244\&quot;:18565,\&quot;1155\&quot;:31940,\&quot;1156\&quot;:31945,\&quot;1157\&quot;:31947}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:listing:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198730211,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:105262491,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:1337,&quot;event_details&quot;:{&quot;total_count&quot;:&quot;10000&quot;,&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;29\&quot;:2756}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:listing:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198730213,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:85932316,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:4994,&quot;event_details&quot;:{&quot;total_count&quot;:&quot;10000&quot;,&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;425\&quot;:27240}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:listing:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198730214,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:94946274,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:2046,&quot;event_details&quot;:{&quot;total_count&quot;:&quot;10000&quot;,&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:1,&quot;params&quot;:&quot;{\&quot;68\&quot;:29633,\&quot;69\&quot;:2773,\&quot;226\&quot;:18057,\&quot;256\&quot;:29524,\&quot;357\&quot;:30378,\&quot;867\&quot;:29515,\&quot;868\&quot;:29528,\&quot;871\&quot;:29537,\&quot;872\&quot;:29542,\&quot;873\&quot;:29548,\&quot;874\&quot;:29552,\&quot;875\&quot;:29559,\&quot;876\&quot;:29563,\&quot;877\&quot;:29567,\&quot;878\&quot;:29584}&quot;},&quot;label&quot;:null}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/analytics/api/v3/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_0195e7dd-1e48-4766-b76a-17f264d09a30</stringProp>
                </elementProp>
                <elementProp name="device-fingerprint" elementType="Header">
                  <stringProp name="Header.name">device-fingerprint</stringProp>
                  <stringProp name="Header.value">7f8fd1fde51720b525799645bf534721</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/search/v3/feed/search?expand=url&amp;per-page=40&amp;city_id=103184&amp;q=%D1%81%D1%83%D1%88%D0%B8%D0%BB%D0%BA%D0%B0%20%D0%B4%D0%BB%D1%8F%20%D0%BF%D0%BE%D1%81%D1%83%D0%B4%D1%8B">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="per-page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">per-page</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">сушилка для посуды</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="expand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">expand</stringProp>
                  <stringProp name="Argument.value">url</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">103184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/search/v3/feed/search</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_4a9528b0-6c7a-4d5f-b5cc-6fa022f76535</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/analytics/api/v3/event">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.value">[{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:listing:apply:search:button:tap&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198732806,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:null,&quot;country_id&quot;:12,&quot;city_id&quot;:null,&quot;category_id&quot;:null,&quot;event_details&quot;:{&quot;city_id&quot;:&quot;10318&quot;,&quot;total_count&quot;:&quot;10000&quot;,&quot;q&quot;:&quot;Ñ&#x81;Ñ&#x83;Ñ&#x88;Ð¸Ð»ÐºÐ° Ð´Ð»Ñ&#x8f; Ð¿Ð¾Ñ&#x81;Ñ&#x83;Ð´Ñ&#x8b;&quot;},&quot;label&quot;:null}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/analytics/api/v3/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_48b7d0f6-9899-45c4-84e9-eb0d384a089f</stringProp>
                </elementProp>
                <elementProp name="device-fingerprint" elementType="Header">
                  <stringProp name="Header.name">device-fingerprint</stringProp>
                  <stringProp name="Header.value">7f8fd1fde51720b525799645bf534721</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/seo/v3/metas/listing?city_id=103184&amp;q=%D1%81%D1%83%D1%88%D0%B8%D0%BB%D0%BA%D0%B0%20%D0%B4%D0%BB%D1%8F%20%D0%BF%D0%BE%D1%81%D1%83%D0%B4%D1%8B&amp;page=1&amp;ads_count=10000">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">сушилка для посуды</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ads_count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ads_count</stringProp>
                  <stringProp name="Argument.value">10000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">103184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/seo/v3/metas/listing</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_61fa8ba0-20cc-49fc-aede-a3af85305041</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/search/v3/feed/count?city_id=103184&amp;q=%D1%81%D1%83%D1%88%D0%B8%D0%BB%D0%BA%D0%B0%20%D0%B4%D0%BB%D1%8F%20%D0%BF%D0%BE%D1%81%D1%83%D0%B4%D1%8B">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">сушилка для посуды</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">103184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/search/v3/feed/count</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_ddc64901-4458-44f4-a3d2-d5dd2e85cd53</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/analytics/api/v3/event">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.value">[{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:listing:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198734108,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:96586290,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:4676,&quot;event_details&quot;:{&quot;total_count&quot;:&quot;10000&quot;,&quot;q&quot;:&quot;Ñ&#x81;Ñ&#x83;Ñ&#x88;Ð¸Ð»ÐºÐ° Ð´Ð»Ñ&#x8f; Ð¿Ð¾Ñ&#x81;Ñ&#x83;Ð´Ñ&#x8b;&quot;,&quot;event24h&quot;:false,&quot;ad_type&quot;:2,&quot;campaign_show&quot;:1,&quot;feed_id&quot;:2,&quot;is_ppv&quot;:1,&quot;params&quot;:&quot;{\&quot;29\&quot;:2756,\&quot;425\&quot;:27241}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:listing:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198734110,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:78932146,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:4596,&quot;event_details&quot;:{&quot;total_count&quot;:&quot;10000&quot;,&quot;q&quot;:&quot;Ñ&#x81;Ñ&#x83;Ñ&#x88;Ð¸Ð»ÐºÐ° Ð´Ð»Ñ&#x8f; Ð¿Ð¾Ñ&#x81;Ñ&#x83;Ð´Ñ&#x8b;&quot;,&quot;event24h&quot;:false,&quot;ad_type&quot;:2,&quot;campaign_show&quot;:1,&quot;feed_id&quot;:2,&quot;is_ppv&quot;:1,&quot;params&quot;:&quot;{\&quot;29\&quot;:2757,\&quot;425\&quot;:27236}&quot;},&quot;label&quot;:null}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/analytics/api/v3/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_bf65fd47-a828-4c62-8995-39f19a827d0e</stringProp>
                </elementProp>
                <elementProp name="device-fingerprint" elementType="Header">
                  <stringProp name="Header.name">device-fingerprint</stringProp>
                  <stringProp name="Header.value">7f8fd1fde51720b525799645bf534721</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/catalog/v3/params/filter?category_id=1317&amp;city_id=103184">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="category_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">category_id</stringProp>
                  <stringProp name="Argument.value">1317</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">103184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/catalog/v3/params/filter</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_faab6b4b-f297-4ce5-8789-85df524d9c76</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/catalog/v32/categories/not-empty-links/1317?city_id=103184">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">103184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/catalog/v32/categories/not-empty-links/1317</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_44d90fdc-8496-46aa-9033-2ba31208d8bf</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/search/v3/feed/search?expand=url&amp;per-page=40&amp;city_id=103184&amp;category_id=1317&amp;q=%D1%81%D1%83%D1%88%D0%B8%D0%BB%D0%BA%D0%B0%20%D0%B4%D0%BB%D1%8F%20%D0%BF%D0%BE%D1%81%D1%83%D0%B4%D1%8B">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="per-page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">per-page</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">сушилка для посуды</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="expand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">expand</stringProp>
                  <stringProp name="Argument.value">url</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="category_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">category_id</stringProp>
                  <stringProp name="Argument.value">1317</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">103184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/search/v3/feed/search</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_9b18e208-ea8b-4152-9aa6-7de0021f3d97</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/catalog/v3/categories/parents?category_id=1317">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="category_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">category_id</stringProp>
                  <stringProp name="Argument.value">1317</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/catalog/v3/categories/parents</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_3aa77e42-a8bc-4028-bf47-f4b300022a82</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/analytics/api/v3/event">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.value">[{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:listing:category_menu:search:level_1:tap&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198744116,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:null,&quot;country_id&quot;:12,&quot;city_id&quot;:null,&quot;category_id&quot;:null,&quot;event_details&quot;:{&quot;category_id&quot;:&quot;1317&quot;},&quot;label&quot;:null}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/analytics/api/v3/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_8600bc2c-75f5-4d74-91c9-e2c935fdb2e8</stringProp>
                </elementProp>
                <elementProp name="device-fingerprint" elementType="Header">
                  <stringProp name="Header.name">device-fingerprint</stringProp>
                  <stringProp name="Header.value">7f8fd1fde51720b525799645bf534721</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/seo/v3/metas/listing?city_id=103184&amp;category_id=1317&amp;q=%D1%81%D1%83%D1%88%D0%B8%D0%BB%D0%BA%D0%B0%20%D0%B4%D0%BB%D1%8F%20%D0%BF%D0%BE%D1%81%D1%83%D0%B4%D1%8B&amp;page=1&amp;ads_count=998">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">сушилка для посуды</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ads_count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ads_count</stringProp>
                  <stringProp name="Argument.value">998</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="category_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">category_id</stringProp>
                  <stringProp name="Argument.value">1317</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">103184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/seo/v3/metas/listing</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_92889548-56a0-4c33-be30-85b8038d96ea</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/search/v3/feed/count?city_id=103184&amp;category_id=1317&amp;q=%D1%81%D1%83%D1%88%D0%B8%D0%BB%D0%BA%D0%B0%20%D0%B4%D0%BB%D1%8F%20%D0%BF%D0%BE%D1%81%D1%83%D0%B4%D1%8B">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">сушилка для посуды</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="category_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">category_id</stringProp>
                  <stringProp name="Argument.value">1317</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">103184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/search/v3/feed/count</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_78243b75-da83-414c-94ac-2306c634cfa8</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/analytics/api/v3/event">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.value">[{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:listing:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198744839,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:104838887,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:1454,&quot;event_details&quot;:{&quot;total_count&quot;:&quot;10000&quot;,&quot;q&quot;:&quot;Ñ&#x81;Ñ&#x83;Ñ&#x88;Ð¸Ð»ÐºÐ° Ð´Ð»Ñ&#x8f; Ð¿Ð¾Ñ&#x81;Ñ&#x83;Ð´Ñ&#x8b;&quot;,&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:2,&quot;params&quot;:&quot;{\&quot;29\&quot;:2757,\&quot;425\&quot;:27240}&quot;,&quot;top&quot;:1},&quot;label&quot;:null}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/analytics/api/v3/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_f000e983-9fb8-49b0-a75c-e8b609a8168b</stringProp>
                </elementProp>
                <elementProp name="device-fingerprint" elementType="Header">
                  <stringProp name="Header.name">device-fingerprint</stringProp>
                  <stringProp name="Header.value">7f8fd1fde51720b525799645bf534721</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/search/v3/suggestions/complete?q=xiaomi">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">xiaomi</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/search/v3/suggestions/complete</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_17cf300d-8011-4f1b-aa53-b7981e2451ac</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/catalog/v32/categories/not-empty-links/1317?city_id=103184">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">103184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/catalog/v32/categories/not-empty-links/1317</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_137fbc11-743c-4eca-8e3b-492ab2109aa4</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/search/v3/feed/search?expand=url&amp;per-page=40&amp;city_id=103184&amp;category_id=1317&amp;q=%D1%81%D1%83%D1%88%D0%B8%D0%BB%D0%BA%D0%B0%20%D0%B4%D0%BB%D1%8F%20%D0%BF%D0%BE%D1%81%D1%83%D0%B4%D1%8B&amp;price[from]=10000">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="per-page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">per-page</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">сушилка для посуды</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="expand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">expand</stringProp>
                  <stringProp name="Argument.value">url</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="category_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">category_id</stringProp>
                  <stringProp name="Argument.value">1317</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="price[from]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">price[from]</stringProp>
                  <stringProp name="Argument.value">10000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">103184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/search/v3/feed/search</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_ff20ab39-c7d0-4877-b57b-30ffb72336bd</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/seo/v3/metas/listing?city_id=103184&amp;category_id=1317&amp;q=%D1%81%D1%83%D1%88%D0%B8%D0%BB%D0%BA%D0%B0%20%D0%B4%D0%BB%D1%8F%20%D0%BF%D0%BE%D1%81%D1%83%D0%B4%D1%8B&amp;price[from]=10000&amp;page=1&amp;ads_count=186">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">сушилка для посуды</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ads_count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ads_count</stringProp>
                  <stringProp name="Argument.value">186</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="category_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">category_id</stringProp>
                  <stringProp name="Argument.value">1317</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="price[from]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">price[from]</stringProp>
                  <stringProp name="Argument.value">10000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">103184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/seo/v3/metas/listing</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_075bf20b-e9ee-4778-ac72-c6e3b3cf899a</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/search/v3/feed/count?city_id=103184&amp;category_id=1317&amp;q=%D1%81%D1%83%D1%88%D0%B8%D0%BB%D0%BA%D0%B0%20%D0%B4%D0%BB%D1%8F%20%D0%BF%D0%BE%D1%81%D1%83%D0%B4%D1%8B&amp;price[from]=10000">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">сушилка для посуды</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="category_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">category_id</stringProp>
                  <stringProp name="Argument.value">1317</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="price[from]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">price[from]</stringProp>
                  <stringProp name="Argument.value">10000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">103184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/search/v3/feed/count</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_07d55b5a-943c-44ad-9e0d-7b93bb0c95c8</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/analytics/api/v3/event">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.value">[{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:listing:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198754627,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:69525965,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:1458,&quot;event_details&quot;:{&quot;total_count&quot;:&quot;998&quot;,&quot;q&quot;:&quot;Ñ&#x81;Ñ&#x83;Ñ&#x88;Ð¸Ð»ÐºÐ° Ð´Ð»Ñ&#x8f; Ð¿Ð¾Ñ&#x81;Ñ&#x83;Ð´Ñ&#x8b;&quot;,&quot;event24h&quot;:false,&quot;ad_type&quot;:4,&quot;campaign_show&quot;:1,&quot;feed_id&quot;:2,&quot;is_ppv&quot;:1,&quot;params&quot;:&quot;{\&quot;29\&quot;:2756,\&quot;105\&quot;:16482,\&quot;221\&quot;:17421,\&quot;222\&quot;:17470,\&quot;223\&quot;:17477,\&quot;425\&quot;:27236}&quot;,&quot;top&quot;:1},&quot;label&quot;:null}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/analytics/api/v3/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_04175d2f-c5c4-48d8-8579-86f52461c62f</stringProp>
                </elementProp>
                <elementProp name="device-fingerprint" elementType="Header">
                  <stringProp name="Header.name">device-fingerprint</stringProp>
                  <stringProp name="Header.value">7f8fd1fde51720b525799645bf534721</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/catalog/v32/categories/not-empty-links/1317?city_id=103184">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">103184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/catalog/v32/categories/not-empty-links/1317</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_8285e872-1bbd-4c2b-b8e9-648e82ec5c51</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/search/v3/feed/search?expand=url&amp;per-page=40&amp;city_id=103184&amp;category_id=1317&amp;q=%D1%81%D1%83%D1%88%D0%B8%D0%BB%D0%BA%D0%B0%20%D0%B4%D0%BB%D1%8F%20%D0%BF%D0%BE%D1%81%D1%83%D0%B4%D1%8B&amp;price[from]=10000&amp;price[to]=15000">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="per-page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">per-page</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">сушилка для посуды</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="expand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">expand</stringProp>
                  <stringProp name="Argument.value">url</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="category_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">category_id</stringProp>
                  <stringProp name="Argument.value">1317</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="price[from]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">price[from]</stringProp>
                  <stringProp name="Argument.value">10000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">103184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="price[to]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">price[to]</stringProp>
                  <stringProp name="Argument.value">15000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/search/v3/feed/search</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_287ba482-ef64-487e-8873-9eb14dbe4a6f</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/seo/v3/metas/listing?city_id=103184&amp;category_id=1317&amp;q=%D1%81%D1%83%D1%88%D0%B8%D0%BB%D0%BA%D0%B0%20%D0%B4%D0%BB%D1%8F%20%D0%BF%D0%BE%D1%81%D1%83%D0%B4%D1%8B&amp;price[from]=10000&amp;price[to]=15000&amp;page=1&amp;ads_count=24">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">сушилка для посуды</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ads_count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ads_count</stringProp>
                  <stringProp name="Argument.value">24</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="category_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">category_id</stringProp>
                  <stringProp name="Argument.value">1317</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="price[from]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">price[from]</stringProp>
                  <stringProp name="Argument.value">10000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">103184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="price[to]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">price[to]</stringProp>
                  <stringProp name="Argument.value">15000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/seo/v3/metas/listing</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_0a8f3186-c4c2-4d7d-9cbe-6fcba76ba517</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/search/v3/feed/count?city_id=103184&amp;category_id=1317&amp;q=%D1%81%D1%83%D1%88%D0%B8%D0%BB%D0%BA%D0%B0%20%D0%B4%D0%BB%D1%8F%20%D0%BF%D0%BE%D1%81%D1%83%D0%B4%D1%8B&amp;price[from]=10000&amp;price[to]=15000">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">сушилка для посуды</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="category_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">category_id</stringProp>
                  <stringProp name="Argument.value">1317</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="price[from]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">price[from]</stringProp>
                  <stringProp name="Argument.value">10000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">103184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="price[to]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">price[to]</stringProp>
                  <stringProp name="Argument.value">15000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/search/v3/feed/count</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_36a9c72c-ddeb-4805-b645-fdd1969afc8f</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/catalog/v32/categories/not-empty-links/1317?city_id=103184">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">103184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/catalog/v32/categories/not-empty-links/1317</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_8a3be6f4-9589-4bd6-817a-55b91cee252d</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/search/v3/feed/search?expand=url&amp;per-page=40&amp;city_id=103184&amp;category_id=1317&amp;q=%D1%81%D1%83%D1%88%D0%B8%D0%BB%D0%BA%D0%B0%20%D0%B4%D0%BB%D1%8F%20%D0%BF%D0%BE%D1%81%D1%83%D0%B4%D1%8B&amp;price[from]=10000&amp;price[to]=15000&amp;parameters[425][0]=27240">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="per-page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">per-page</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">сушилка для посуды</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="expand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">expand</stringProp>
                  <stringProp name="Argument.value">url</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="category_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">category_id</stringProp>
                  <stringProp name="Argument.value">1317</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="price[from]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">price[from]</stringProp>
                  <stringProp name="Argument.value">10000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="parameters[425][0]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">parameters[425][0]</stringProp>
                  <stringProp name="Argument.value">27240</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">103184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="price[to]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">price[to]</stringProp>
                  <stringProp name="Argument.value">15000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/search/v3/feed/search</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_8ad3c5fc-417d-4e07-87af-4de17758425c</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/analytics/api/v3/event">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.value">[{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:listing:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198759147,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:84710288,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:4421,&quot;event_details&quot;:{&quot;total_count&quot;:&quot;186&quot;,&quot;q&quot;:&quot;Ñ&#x81;Ñ&#x83;Ñ&#x88;Ð¸Ð»ÐºÐ° Ð´Ð»Ñ&#x8f; Ð¿Ð¾Ñ&#x81;Ñ&#x83;Ð´Ñ&#x8b;&quot;,&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:2,&quot;params&quot;:&quot;{\&quot;29\&quot;:2757,\&quot;105\&quot;:27215,\&quot;425\&quot;:27241}&quot;,&quot;top&quot;:1},&quot;label&quot;:null}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/analytics/api/v3/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_73969d87-bfeb-4d51-b40f-e8773371553d</stringProp>
                </elementProp>
                <elementProp name="device-fingerprint" elementType="Header">
                  <stringProp name="Header.name">device-fingerprint</stringProp>
                  <stringProp name="Header.value">7f8fd1fde51720b525799645bf534721</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/seo/v3/metas/listing?city_id=103184&amp;category_id=1317&amp;q=%D1%81%D1%83%D1%88%D0%B8%D0%BB%D0%BA%D0%B0%20%D0%B4%D0%BB%D1%8F%20%D0%BF%D0%BE%D1%81%D1%83%D0%B4%D1%8B&amp;price[from]=10000&amp;price[to]=15000&amp;parameters[425][0]=27240&amp;page=1&amp;ads_count=5">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">сушилка для посуды</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ads_count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ads_count</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="category_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">category_id</stringProp>
                  <stringProp name="Argument.value">1317</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="price[from]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">price[from]</stringProp>
                  <stringProp name="Argument.value">10000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="parameters[425][0]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">parameters[425][0]</stringProp>
                  <stringProp name="Argument.value">27240</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">103184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="price[to]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">price[to]</stringProp>
                  <stringProp name="Argument.value">15000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/seo/v3/metas/listing</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_5dd048a4-15fe-4a72-8baf-2a76b8c22f71</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/search/v3/feed/count?city_id=103184&amp;category_id=1317&amp;q=%D1%81%D1%83%D1%88%D0%B8%D0%BB%D0%BA%D0%B0%20%D0%B4%D0%BB%D1%8F%20%D0%BF%D0%BE%D1%81%D1%83%D0%B4%D1%8B&amp;price[from]=10000&amp;price[to]=15000&amp;parameters[425][0]=27240">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">сушилка для посуды</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="category_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">category_id</stringProp>
                  <stringProp name="Argument.value">1317</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="price[from]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">price[from]</stringProp>
                  <stringProp name="Argument.value">10000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="parameters[425][0]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">parameters[425][0]</stringProp>
                  <stringProp name="Argument.value">27240</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">103184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="price[to]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">price[to]</stringProp>
                  <stringProp name="Argument.value">15000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/search/v3/feed/count</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_e35e8687-f6d2-4eb4-9586-65d5fe2bf169</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/analytics/api/v3/event">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.value">[{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:listing:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198759838,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:84638564,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:1330,&quot;event_details&quot;:{&quot;total_count&quot;:&quot;186&quot;,&quot;q&quot;:&quot;Ñ&#x81;Ñ&#x83;Ñ&#x88;Ð¸Ð»ÐºÐ° Ð´Ð»Ñ&#x8f; Ð¿Ð¾Ñ&#x81;Ñ&#x83;Ð´Ñ&#x8b;&quot;,&quot;event24h&quot;:false,&quot;old_price&quot;:15000,&quot;ad_type&quot;:1,&quot;feed_id&quot;:2,&quot;params&quot;:&quot;{\&quot;29\&quot;:2757,\&quot;425\&quot;:27240}&quot;},&quot;label&quot;:null}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/analytics/api/v3/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_837ad405-6fe1-423a-98da-6931bcbcb214</stringProp>
                </elementProp>
                <elementProp name="device-fingerprint" elementType="Header">
                  <stringProp name="Header.name">device-fingerprint</stringProp>
                  <stringProp name="Header.value">7f8fd1fde51720b525799645bf534721</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/analytics/api/v3/event">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.value">[{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:listing:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198774917,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:102775834,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:6555,&quot;event_details&quot;:{&quot;total_count&quot;:&quot;5&quot;,&quot;q&quot;:&quot;Ñ&#x81;Ñ&#x83;Ñ&#x88;Ð¸Ð»ÐºÐ° Ð´Ð»Ñ&#x8f; Ð¿Ð¾Ñ&#x81;Ñ&#x83;Ð´Ñ&#x8b;&quot;,&quot;event24h&quot;:false,&quot;old_price&quot;:20000,&quot;ad_type&quot;:1,&quot;feed_id&quot;:2,&quot;params&quot;:&quot;{\&quot;29\&quot;:2756,\&quot;425\&quot;:27240,\&quot;1680\&quot;:31543}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:listing:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198774918,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:81303385,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:4425,&quot;event_details&quot;:{&quot;total_count&quot;:&quot;5&quot;,&quot;q&quot;:&quot;Ñ&#x81;Ñ&#x83;Ñ&#x88;Ð¸Ð»ÐºÐ° Ð´Ð»Ñ&#x8f; Ð¿Ð¾Ñ&#x81;Ñ&#x83;Ð´Ñ&#x8b;&quot;,&quot;event24h&quot;:false,&quot;old_price&quot;:16000,&quot;ad_type&quot;:1,&quot;feed_id&quot;:2,&quot;params&quot;:&quot;{\&quot;29\&quot;:2757,\&quot;105\&quot;:16496,\&quot;425\&quot;:27241}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:listing:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198774920,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:89675094,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:4417,&quot;event_details&quot;:{&quot;total_count&quot;:&quot;5&quot;,&quot;q&quot;:&quot;Ñ&#x81;Ñ&#x83;Ñ&#x88;Ð¸Ð»ÐºÐ° Ð´Ð»Ñ&#x8f; Ð¿Ð¾Ñ&#x81;Ñ&#x83;Ð´Ñ&#x8b;&quot;,&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:2,&quot;params&quot;:&quot;{\&quot;29\&quot;:2757,\&quot;327\&quot;:22843,\&quot;328\&quot;:22892,\&quot;329\&quot;:22973,\&quot;330\&quot;:22974,\&quot;331\&quot;:22982,\&quot;425\&quot;:27240}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:listing:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198774921,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:41546222,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:4422,&quot;event_details&quot;:{&quot;total_count&quot;:&quot;5&quot;,&quot;q&quot;:&quot;Ñ&#x81;Ñ&#x83;Ñ&#x88;Ð¸Ð»ÐºÐ° Ð´Ð»Ñ&#x8f; Ð¿Ð¾Ñ&#x81;Ñ&#x83;Ð´Ñ&#x8b;&quot;,&quot;event24h&quot;:false,&quot;ad_type&quot;:1,&quot;feed_id&quot;:2,&quot;params&quot;:&quot;{\&quot;29\&quot;:2757,\&quot;425\&quot;:27240}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:listing:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198774921,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:102775834,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:6555,&quot;event_details&quot;:{&quot;total_count&quot;:&quot;5&quot;,&quot;q&quot;:&quot;Ñ&#x81;Ñ&#x83;Ñ&#x88;Ð¸Ð»ÐºÐ° Ð´Ð»Ñ&#x8f; Ð¿Ð¾Ñ&#x81;Ñ&#x83;Ð´Ñ&#x8b;&quot;,&quot;event24h&quot;:false,&quot;old_price&quot;:20000,&quot;ad_type&quot;:1,&quot;feed_id&quot;:2,&quot;params&quot;:&quot;{\&quot;29\&quot;:2756,\&quot;425\&quot;:27240,\&quot;1680\&quot;:31543}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:listing:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198774922,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:81303385,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:4425,&quot;event_details&quot;:{&quot;total_count&quot;:&quot;5&quot;,&quot;q&quot;:&quot;Ñ&#x81;Ñ&#x83;Ñ&#x88;Ð¸Ð»ÐºÐ° Ð´Ð»Ñ&#x8f; Ð¿Ð¾Ñ&#x81;Ñ&#x83;Ð´Ñ&#x8b;&quot;,&quot;event24h&quot;:false,&quot;old_price&quot;:16000,&quot;ad_type&quot;:1,&quot;feed_id&quot;:2,&quot;params&quot;:&quot;{\&quot;29\&quot;:2757,\&quot;105\&quot;:16496,\&quot;425\&quot;:27241}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:listing:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198774923,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:84638564,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:1330,&quot;event_details&quot;:{&quot;total_count&quot;:&quot;5&quot;,&quot;q&quot;:&quot;Ñ&#x81;Ñ&#x83;Ñ&#x88;Ð¸Ð»ÐºÐ° Ð´Ð»Ñ&#x8f; Ð¿Ð¾Ñ&#x81;Ñ&#x83;Ð´Ñ&#x8b;&quot;,&quot;event24h&quot;:false,&quot;old_price&quot;:15000,&quot;ad_type&quot;:1,&quot;feed_id&quot;:2,&quot;params&quot;:&quot;{\&quot;29\&quot;:2757,\&quot;425\&quot;:27240}&quot;},&quot;label&quot;:null},{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:listing:feed:listing:ad:view&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198774924,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:102775834,&quot;country_id&quot;:12,&quot;city_id&quot;:103184,&quot;category_id&quot;:6555,&quot;event_details&quot;:{&quot;total_count&quot;:&quot;5&quot;,&quot;q&quot;:&quot;Ñ&#x81;Ñ&#x83;Ñ&#x88;Ð¸Ð»ÐºÐ° Ð´Ð»Ñ&#x8f; Ð¿Ð¾Ñ&#x81;Ñ&#x83;Ð´Ñ&#x8b;&quot;,&quot;event24h&quot;:false,&quot;old_price&quot;:20000,&quot;ad_type&quot;:1,&quot;feed_id&quot;:2,&quot;params&quot;:&quot;{\&quot;29\&quot;:2756,\&quot;425\&quot;:27240,\&quot;1680\&quot;:31543}&quot;},&quot;label&quot;:null}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/analytics/api/v3/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_a8754948-da41-43c3-bc98-c2658d5b7b0a</stringProp>
                </elementProp>
                <elementProp name="device-fingerprint" elementType="Header">
                  <stringProp name="Header.name">device-fingerprint</stringProp>
                  <stringProp name="Header.value">7f8fd1fde51720b525799645bf534721</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/bishkek/ads/prodautsa-ozonatory-privezennye-iz-id-84638564">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">bishkek/ads/prodautsa-ozonatory-privezennye-iz-id-84638564</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer">
              <stringProp name="RandomTimer.range">57089.0</stringProp>
              <stringProp name="ConstantTimer.delay">28544.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 57089 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/catalog/v3/categories/parents?category_id=1330&amp;with_current=true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="with_current" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">with_current</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="category_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">category_id</stringProp>
                  <stringProp name="Argument.value">1330</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/catalog/v3/categories/parents</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_125310bf-ebbc-4a4f-b0b1-08c39d1f06dc</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/catalog/v2/fast-messages">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/catalog/v2/fast-messages</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_a88d3ab7-084c-4434-a7ef-61f3172b589e</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/search/v3/feed/details/84638564?expand=url">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="expand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">expand</stringProp>
                  <stringProp name="Argument.value">url</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/search/v3/feed/details/84638564</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_bc436f56-192b-489f-ae98-c38b5f92f7c3</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/seo/v3/metas/details?ad_id=84638564&amp;category_id=1330&amp;city_id=103184">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ad_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ad_id</stringProp>
                  <stringProp name="Argument.value">84638564</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="category_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">category_id</stringProp>
                  <stringProp name="Argument.value">1330</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="city_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city_id</stringProp>
                  <stringProp name="Argument.value">103184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/seo/v3/metas/details</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_31629a74-2811-408d-8667-7a27eee4d1d0</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/proxy/location/v3/cities/all?country_id=12">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="country_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">country_id</stringProp>
                  <stringProp name="Argument.value">12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/proxy/location/v3/cities/all</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_d0ca2837-8957-476f-877a-03da95a980fc</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/proxy/catalog/v3/categories/tree">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/proxy/catalog/v3/categories/tree</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_777cab7d-6572-4e3a-addd-4976a7fc2c2a</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/proxy/catalog/categories/fullname">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/proxy/catalog/categories/fullname</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_5696defe-cdc1-4b58-9f93-c21b4dbaf895</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/business-profile/v3/business-profile/features/user/10126502">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/business-profile/v3/business-profile/features/user/10126502</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_648bf15f-c20c-420e-8fcd-5cf713179852</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/experiment/v3/experiments?">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.value">{&quot;include_server_only&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/experiment/v3/experiments?</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_c6fd7c83-eedd-400c-8a18-d292f0834f95</stringProp>
                </elementProp>
                <elementProp name="device-fingerprint" elementType="Header">
                  <stringProp name="Header.name">device-fingerprint</stringProp>
                  <stringProp name="Header.value">7f8fd1fde51720b525799645bf534721</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/chat-socket/v3/users/get-user-status?userIds[]=10126502">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="userIds[]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userIds[]</stringProp>
                  <stringProp name="Argument.value">10126502</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/chat-socket/v3/users/get-user-status</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_ab9527ef-714f-4c54-b13a-f2c5e9b4b4ff</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/fraud/v3/captchas/is-captcha-for-registration">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/fraud/v3/captchas/is-captcha-for-registration</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_0981ba59-5d92-48df-999c-6ac2e26146a3</stringProp>
                </elementProp>
                <elementProp name="device-fingerprint" elementType="Header">
                  <stringProp name="Header.name">device-fingerprint</stringProp>
                  <stringProp name="Header.value">7f8fd1fde51720b525799645bf534721</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/auth/login">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.value">{&quot;mobile&quot;:&quot;+996707707895&quot;,&quot;password&quot;:&quot;123123&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/auth/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_0ea88b65-368b-475f-91fc-d6b1b17f2fa2</stringProp>
                </elementProp>
                <elementProp name="device-fingerprint" elementType="Header">
                  <stringProp name="Header.name">device-fingerprint</stringProp>
                  <stringProp name="Header.value">7f8fd1fde51720b525799645bf534721</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lalafo.kg/api/analytics/api/v3/event">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.value">[{&quot;environment&quot;:&quot;prod&quot;,&quot;experiment_id&quot;:null,&quot;event_name&quot;:&quot;web:login:email_phone:authorization:button:tap&quot;,&quot;user_hash&quot;:&quot;3d96736e-bf86-4258-a60b-a06f912d9880&quot;,&quot;source_name&quot;:&quot;null,null,null&quot;,&quot;timestamp&quot;:1690198794259,&quot;event_initiator&quot;:&quot;web&quot;,&quot;session_hash&quot;:&quot;d272f7e25f3b3696095ca78623a24481&quot;,&quot;user_id&quot;:null,&quot;ad_id&quot;:null,&quot;country_id&quot;:12,&quot;city_id&quot;:null,&quot;category_id&quot;:null,&quot;event_details&quot;:{&quot;password&quot;:&quot;Ð&#x9d;ÐµÐ²ÐµÑ&#x80;Ð½Ñ&#x8b;Ð¹ Ð¿Ð°Ñ&#x80;Ð¾Ð»Ñ&#x8c;. Ð&#x9f;Ð¾Ð¿Ñ&#x80;Ð¾Ð±Ñ&#x83;Ð¹Ñ&#x82;Ðµ Ð´Ñ&#x80;Ñ&#x83;Ð³Ð¾Ð¹ Ð¸Ð»Ð¸ Ð·Ð°Ð¿Ñ&#x80;Ð¾Ñ&#x81;Ð¸Ñ&#x82;Ðµ Ð½Ð¾Ð²Ñ&#x8b;Ð¹&quot;,&quot;label&quot;:&quot;error&quot;},&quot;label&quot;:&quot;error&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/analytics/api/v3/event</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-hash" elementType="Header">
                  <stringProp name="Header.name">user-hash</stringProp>
                  <stringProp name="Header.value">3d96736e-bf86-4258-a60b-a06f912d9880</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">ru_RU</stringProp>
                </elementProp>
                <elementProp name="country-id" elementType="Header">
                  <stringProp name="Header.name">country-id</stringProp>
                  <stringProp name="Header.value">12</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="X-Cache-Bypass" elementType="Header">
                  <stringProp name="Header.name">X-Cache-Bypass</stringProp>
                  <stringProp name="Header.value">yes</stringProp>
                </elementProp>
                <elementProp name="device" elementType="Header">
                  <stringProp name="Header.name">device</stringProp>
                  <stringProp name="Header.value">pc</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">react-client_ce37497c-b6f9-4de0-99a7-1a42d69195c7</stringProp>
                </elementProp>
                <elementProp name="device-fingerprint" elementType="Header">
                  <stringProp name="Header.name">device-fingerprint</stringProp>
                  <stringProp name="Header.value">7f8fd1fde51720b525799645bf534721</stringProp>
                </elementProp>
                <elementProp name="experiment" elementType="Header">
                  <stringProp name="Header.name">experiment</stringProp>
                  <stringProp name="Header.value">novalue</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
